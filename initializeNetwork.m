function net = initializeNetwork()
    f=1/100 ;
    net.layers = {} ;
    net.layers{end+1} = struct('type', 'conv', ...
                               'filters', f*randn(5,5,1,20, 'single'), ...
                               'biases', zeros(1, 20, 'single'), ...
                               'stride', 1, ...
                               'pad', 0) ;
    net.layers{end+1} = struct('type', 'pool', ...
                               'method', 'max', ...
                               'pool', [2 2], ...
                               'stride', 2, ...
                               'pad', 0) ;
    net.layers{end+1} = struct('type', 'relu') ;
    net.layers{end+1} = struct('type', 'conv', ...
                               'filters', f*randn(5,5,20,40, 'single'),...
                               'biases', zeros(1,40,'single'), ...
                               'stride', 1, ...
                               'pad', 0) ;
    net.layers{end+1} = struct('type', 'pool', ...
                               'method', 'max', ...
                               'pool', [2 2], ...
                               'stride', 2, ...
                               'pad', 0) ;
   net.layers{end+1} = struct('type', 'relu') ;
   net.layers{end+1} = struct('type', 'conv', ...
                               'filters', f*randn(4,4,40,100, 'single'),...
                               'biases', zeros(1,100,'single'), ...
                               'stride', 1, ...
                               'pad', 0) ;
    net.layers{end+1} = struct('type', 'relu') ;
    net.layers{end+1} = struct('type', 'conv', ...
                               'filters', f*randn(1,1,100,10, 'single'),...
                               'biases', zeros(1,10,'single'), ...
                               'stride', 1, ...
                               'pad', 0) ;
    net.layers{end+1} = struct('type', 'softmaxloss') ;
end