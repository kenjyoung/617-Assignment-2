function net = initializeNetwork()
    net.layers = {} ;
    net.layers{end+1} = struct('type', 'conv', ...
                               'filters', single(normrnd(0, sqrt(1/125), [5,5,1,20])), ...
                               'biases', zeros(1, 20, 'single'), ...
                               'stride', 1, ...
                               'pad', 0) ;
    net.layers{end+1} = struct('type', 'pool', ...
                               'method', 'max', ...
                               'pool', [2 2], ...
                               'stride', 2, ...
                               'pad', 0) ;
    net.layers{end+1} = struct('type', 'relu') ;
    net.layers{end+1} = struct('type', 'conv', ...
                               'filters', single(normrnd(0, sqrt(1/250), 5,5,20,40)),...
                               'biases', zeros(1,40,'single'), ...
                               'stride', 1, ...
                               'pad', 0) ;
    net.layers{end+1} = struct('type', 'pool', ...
                               'method', 'max', ...
                               'pool', [2 2], ...
                               'stride', 2, ...
                               'pad', 0) ;
   net.layers{end+1} = struct('type', 'relu') ;
   net.layers{end+1} = struct('type', 'conv', ...
                               'filters', single(normrnd(0, sqrt(1/1000), 4,4,40,1000)),...
                               'biases', zeros(1,1000,'single'), ...
                               'stride', 1, ...
                               'pad', 0) ;
    net.layers{end+1} = struct('type', 'relu') ;
    net.layers{end+1} = struct('type', 'dropout', ...
                               'rate', 0.5) ;
    net.layers{end+1} = struct('type', 'conv', ...
                               'filters', single(normrnd(0, sqrt(1/1000), 1,1,1000,1000)),...
                               'biases', zeros(1,1000,'single'), ...
                               'stride', 1, ...
                               'pad', 0) ;
    net.layers{end+1} = struct('type', 'relu') ;
    net.layers{end+1} = struct('type', 'dropout', ...
                               'rate', 0.5) ;
    net.layers{end+1} = struct('type', 'conv', ...
                               'filters', zeros(1,1,1000,10,'single'),...
                               'biases', zeros(1,10,'single'), ...
                               'stride', 1, ...
                               'pad', 0) ;
    net.layers{end+1} = struct('type', 'softmaxloss') ;
end